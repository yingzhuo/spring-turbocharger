plugins {
	id 'groovy-gradle-plugin'
}

description = 'build logic'

['../gradle.properties', '../gradle.xml', 'gradle.properties', '../versions.xml']
	.stream()
	.forEach { filePath ->
		var file = file(filePath)
		if (file.exists() && file.isFile()) {
			var props = new Properties()

			if (filePath.endsWithIgnoreCase('.properties')) {
				file.withDataInputStream { stream ->
					props.load(stream)
				}
			}

			if (filePath.endsWithIgnoreCase('.xml')) {
				file.withDataInputStream { stream ->
					props.loadFromXML(stream)
				}
			}

			props.forEach(ext::set)
		}
	}

ext {
}

dependencies {
	implementation "io.gitee.pkmer.pkmerboot-central-publisher:io.gitee.pkmer.pkmerboot-central-publisher.gradle.plugin:$mavenCentralPublisherPluginVersion"
	implementation "io.spring.dependency-management:io.spring.dependency-management.gradle.plugin:$dependencyManagementPluginVersion"
	implementation "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
	implementation "com.github.hierynomus.license:com.github.hierynomus.license.gradle.plugin:$licensePluginVersion"
}
