plugins {
	id 'java'
	id 'java-library'
	id 'io.spring.dependency-management'
	id 'com.github.hierynomus.license'
}

java {
	var javaVersionInt = jdkVersion as Integer
	sourceCompatibility = JavaVersion.toVersion(javaVersionInt)
	targetCompatibility = JavaVersion.toVersion(javaVersionInt)

	toolchain {
		languageVersion = JavaLanguageVersion.of(javaVersionInt)
		vendor = JvmVendorSpec.ORACLE
		implementation = JvmImplementation.VENDOR_SPECIFIC
	}

	withSourcesJar()
	withJavadocJar()
}

compileJava {
	options.compilerArgs += [
		'-parameters',
		'-Xlint:unchecked',
		'-Xlint:cast',
		'-Xlint:rawtypes',
		'-Xlint:overloads',
		'-Xlint:divzero',
		'-Xlint:finally',
		'-Xlint:static',
		// '-Werror',
	]
}

jar {
	manifest {
		attributes([
			'Module-Name'           : project.name,
			'Implementation-Version': project.version,
			'Build-Jdk-Spec'        : jdkVersion
		])
	}
}

sourcesJar {
}

javadoc {
	failOnError = false

	options {
		locale = 'en_US'
		encoding = 'UTF-8'
		addBooleanOption("html5", true)
		addBooleanOption("Xdoclint:none", true)
	}
}

processResources {
	from(rootDir) {
		include('LICENSE.txt', 'NOTICE.txt')
		into 'META-INF'
	}

	exclude('**/.DS_Store', '**/.gitkeep', '.gitignore')
}

processTestResources {
	exclude('**/.DS_Store', '**/.gitkeep', '.gitignore')
}

test {
	useJUnitPlatform()
}

license {
	includes([
		'**/*.java', '**/*.kt', '**/*.scala', '**/*.groovy',
		'**/spring.factories', '**/',
		'**/org.springframework.boot.autoconfigure.AutoConfiguration.imports'
	])

	excludes([
	  '**/*.properties', '**/*.xml', '**/*.yaml', '**/*.yml', '**/*.conf', '**/*.toml'
	])

	header = rootProject.file('buildSrc/config/license/header.txt')
	strictCheck = true

	mapping('java', 'SLASHSTAR_STYLE')
	mapping('factories', 'SCRIPT_STYLE')
	mapping('imports', 'SCRIPT_STYLE')

	ext {
		inceptionYear = "2022"
		email = 'yingzhor@gmail.com'
	}

}
