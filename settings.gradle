pluginManagement {
	repositories {
		mavenLocal()

		file('buildSrc/config/maven/repositories.txt')
			.readLines()
			.forEach { line ->
				line = line.trim()
				if (!line.isBlank() && !line.startsWith('#')) {
					maven {
						url = uri(line)
						allowInsecureProtocol = true
						content {
							excludeGroup 'com.github.yingzhuo'
							excludeGroup 'io.github.yingzhuo'
						}
					}
				}
			}

		gradlePluginPortal()
		mavenCentral()
		google()
	}
}

plugins {
	id 'io.spring.dependency-management' version "$dependencyManagementPluginVersion" apply false
	id 'org.springframework.boot' version "$springBootVersion" apply false
	id 'io.gitee.pkmer.pkmerboot-central-publisher' version "$mavenCentralPublisherPluginVersion" apply false
}

dependencyResolutionManagement {
	repositories {
		mavenLocal()

		file('buildSrc/config/maven/repositories.txt')
			.readLines()
			.forEach { line ->
				line = line.trim()
				if (!line.isBlank() && !line.startsWith('#')) {
					maven {
						url = uri(line)
						allowInsecureProtocol = true
						content {
							excludeGroup 'com.github.yingzhuo'
							excludeGroup 'io.github.yingzhuo'
						}
					}
				}
			}

		mavenCentral()
		google()
	}
}

// root project
rootProject.name = 'spring-turbocharger'

// main
file("$rootDir/projects-main/").eachDirMatch(~/spring-turbo.*/) {
	include "projects-main:${it.name}"
}

// examples
file("$rootDir/projects-example/").eachDirMatch(~/.*/) {
	include "projects-example:${it.name}"
}
