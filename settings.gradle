pluginManagement {
	repositories {
		mavenLocal()
		gradlePluginPortal()
		mavenCentral()
		maven { url = uri('https://repo.spring.io/release') }
		maven { url = uri('https://repo.spring.io/milestone') }
		maven { url = uri('https://repo.spring.io/snapshot') }
	}
}

plugins {
	id 'io.spring.dependency-management' version "$dependencyManagementPluginVersion" apply false
	id 'io.gitee.pkmer.pkmerboot-central-publisher' version "$mavenCentralPublisherPluginVersion" apply false
	id 'com.gorylenko.gradle-git-properties' version "$gitPluginVersion" apply false
}

dependencyResolutionManagement {
	repositories {
		mavenLocal()

		if (providers.gradleProperty('useChinaMavenRepositoryMirrors').getOrElse('true').toBoolean()) {
			maven { url = uri('https://maven.aliyun.com/repository/public/') }
			maven { url = uri('https://mirrors.cloud.tencent.com/nexus/repository/maven-public/') }
			maven { url = uri('https://repo.huaweicloud.com/repository/maven/') }
			maven { url = uri('https://maven.jdcloud.com/repos/content/groups/public/') }
			maven { url = uri('https://mirrors.163.com/maven/repository/maven-public/') }
		}

		mavenCentral()
		gradlePluginPortal()
		maven { url = uri('https://repo.spring.io/release') }
		maven { url = uri('https://repo.spring.io/milestone') }
		maven { url = uri('https://repo.spring.io/snapshot') }
		google()
	}

	repositoriesMode = RepositoriesMode.FAIL_ON_PROJECT_REPOS
}

rootProject.name = 'spring-turbocharger'

['projects-main', 'projects-example'].each {
	file(it).eachDirMatch(~/.*/) { projectDir ->
		include "$it:${projectDir.name}"
	}
}
