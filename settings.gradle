pluginManagement {
	repositories {
		mavenLocal()
		gradlePluginPortal()
		mavenCentral()
		maven { url = 'https://repo.spring.io/release' }
		maven { url = 'https://repo.spring.io/milestone' }
		maven { url = 'https://repo.spring.io/snapshot' }
	}
}

plugins {
	id 'io.spring.dependency-management' version "$dependencyManagementPluginVersion" apply false
	id 'io.gitee.pkmer.pkmerboot-central-publisher' version "$mavenCentralPublisherPluginVersion" apply false
	id 'com.gorylenko.gradle-git-properties' version "$gitPluginVersion" apply false
}

dependencyResolutionManagement {
	repositories {
		mavenLocal()

		if (providers.gradleProperty('useChinaMavenMirrors').getOrElse('true').toBoolean()) {
			maven {
				name = '阿里云'
				url = 'https://maven.aliyun.com/repository/public/'
			}
			maven {
				name = '腾讯云'
				url = 'https://mirrors.cloud.tencent.com/nexus/repository/maven-public/'
			}
			maven {
				name = '华为云'
				url = 'https://repo.huaweicloud.com/repository/maven/'
			}
			maven {
				name = '京东云'
				url = 'https://maven.jdcloud.com/repos/content/groups/public/'
			}
			maven {
				name = '网易云'
				url = 'https://mirrors.163.com/maven/repository/maven-public/'
			}
		}

		mavenCentral()
		gradlePluginPortal()
		maven {
			name = 'spring-release'
			url = 'https://repo.spring.io/release'
		}
		maven {
			name = 'spring-milestone'
			url = 'https://repo.spring.io/milestone'
		}
		maven {
			name = 'spring-snapshot'
			url = 'https://repo.spring.io/snapshot'
		}
		google()
	}

	repositoriesMode = RepositoriesMode.FAIL_ON_PROJECT_REPOS
}

rootProject.name = 'spring-turbocharger'

['projects-main', 'projects-example'].each {
	file(it).eachDirMatch(~/.*/) { projectDir ->
		include "$it:${projectDir.name}"
	}
}
